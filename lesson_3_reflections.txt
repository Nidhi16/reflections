Question1:- When would you want to create a remote repository rather than keeping all your work local?

When we want to collaborate with people, when we want to work on a big project by collaborating with our team member then we want to create a remote repository. Also by creating remote repository all of our works is saved when our laptop or machine which we worked upon is crashed or lost or damaged by some reason, then still we can see our repositories by another laptop or machines.

Question2:- Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because remote server or we can say github can not directly clone our local repos which are on our local computer, so they can not up to date our local repositories. that's why we always pull changes manually to stay up to date with our remote repository.

Question4:- Describe the differences between forks, clones, and branches. When would you use one instead of another?

When we clone or make copies of others repository which is hosted on remote servers like Github to our repository which is also on Github, then this process is known as forking.
When we make copy of other repository which is hosted on remote server like Github or on our local computer to our local computer then this is known as cloning.
And when we work on a single repository, and break a main file into fragments to do extra features or solve bugs, then this is known as branching.
We use fork when we want to make copy of others repository on our repository on Github.
We use clones when we want to make copy of others repository which is on github to our local computer.
We use branch when we want to add extra features on the project.


Question5:- What is the benefit of having a copy of the last known state of the remote stored locally?

When we have a remote set-up, Git stores local copies of all the remote branches.These will each contain the state of the remote branch as of the last time we pushed or pulled the branches. So when we update master branch on the local computer, the local branch gets updated but the local copy of remote branch and on the remote branch,there is no updation occur, when we push the, then after pushing the remote branch on github gets updated along with the local copy of the remote branch.Same thing happen when we update the master branch on remote server like github and then makes pull.
But sometimes things are not easy and straight forward.sometimes conflict may happen when situation like this happen: When we update our local master branch and don't push it to the corresponding repository on Github and also when update the remote branch also on Github and do not pull it on the local computer then there is a conflict occour. To resolve such type of conflict we have a copy of the last known state of the remote stored locally.

Question6:- How would you collaborate without using Git or Github? What would be easier, and what would be harder?

I might use google mail service or google docs. But it might be quiet harder because if i have to change hundread or thousand times then i have to save them in different files with different names, to keep the essence of version control system and i have to mail many times.This would proof to be a tedious work. And there is no easier part of it and if there is then that would be we don't have to remember commands and don't have to use command line but it not a reasonable reason.

Question7:- When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When we want to add some changes to our master branch but with the approval of other peoples or collaboraters to merge the changes, rather than change directly into a master branch. The benefit is that when other people does not like my changes then we will not proceed further, and if they like my changes then we will merge it into the master branch with the approval of other collaborators. 
